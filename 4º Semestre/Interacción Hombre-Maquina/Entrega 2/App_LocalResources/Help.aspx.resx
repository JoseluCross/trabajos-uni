<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Coche" xml:space="preserve">
    <value>Coche</value>
  </data>
  <data name="CocheInfo" xml:space="preserve">
    <value>Si haces click en la matrícula de un coche irás a una página donde podrás ver el histórico de los tickets de ese coche.</value>
  </data>
  <data name="Coches" xml:space="preserve">
    <value>Coches</value>
  </data>
  <data name="CochesInfo" xml:space="preserve">
    <value>Aquí encontrarás los tickets actuales dandote la posibilidad de acceder a más información de los mismo, justo debajo las infracciones que tienes además de su correspondiente boton "más información" y por útlimo los coches desde donde podrás acceder a sus histórico.</value>
  </data>
  <data name="Contacto" xml:space="preserve">
    <value>Contacto</value>
  </data>
  <data name="ContactoInfo" xml:space="preserve">
    <value>En esta pestalla podrás encontrar los datos para contactar con ACME Inc.</value>
  </data>
  <data name="Infraccion" xml:space="preserve">
    <value>Infracciones</value>
  </data>
  <data name="Infracciones" xml:space="preserve">
    <value>Si das al enlace de "Más Información" de una Infracción podrás ver la información detallada y la posibilidad de pagar e impugnar.</value>
  </data>
  <data name="Inicio" xml:space="preserve">
    <value>Inicio</value>
  </data>
  <data name="InicioInfo" xml:space="preserve">
    <value>Si estás logueado a la izquierda encontrarás una imagen que al hacer click irás directamente a tu perfil.
A la derecha tendrás la imagen de un coche para ver la información de los mismos.</value>
  </data>
  <data name="Perfil" xml:space="preserve">
    <value>Perfil</value>
  </data>
  <data name="PerfilInfo" xml:space="preserve">
    <value>En esta pestaña podrás encontrar toda tu información personal así como la posiblidad de modificarlo.</value>
  </data>
  <data name="Sobre" xml:space="preserve">
    <value>Acerca de</value>
  </data>
  <data name="SobreInfo" xml:space="preserve">
    <value>En esta pestalla está la información de quienes somos nosotros.</value>
  </data>
  <data name="Ticket" xml:space="preserve">
    <value>Tickets actuales</value>
  </data>
  <data name="TicketsActuales" xml:space="preserve">
    <value>Una vez dado al enlace "Más Información" de un ticket actual en la pestaña "Coches" podrás ampliar el tiempo de estancia automáticamente o añadiendo más dinero o incrementando los minutos a un máximo de dos horas de estancia. Siempre se le pedirá confirmación.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Ayuda</value>
  </data>
</root>